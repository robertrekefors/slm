Laboration 5 – Liten språkmodell
Kurs: Kandidatkurs i programmering
Författare: Robert Rekefors

Syfte:
Syftet med laborationen var att implementera en enkel språkmodell i C++ som kan analysera textdata och generera ny text med liknande statistiska egenskaper. Projektet visar hur sannolikhetsbaserad textgenerering kan genomföras med hjälp av datastrukturer och slumpmässiga processer.

Metod:
Programmet bygger på en modell som analyserar k-grams, det vill säga sekvenser av k tecken, i en indatafil. För varje k-gram beräknas frekvensen av vilka tecken som följer. Dessa frekvenser används sedan för att generera ny text genom stokastiskt urval baserat på sannolikhetsfördelningar. 
Koden är uppdelad i två huvudklasser:
- LanguageModel: bygger upp frekvenstabeller och sannolikheter.
- TextGenerator: använder modellen för att skapa ny text.
En Makefile används för att automatisera kompileringen, och Git/GitHub används för versionshantering.

Resultat:
Programmet kan generera text som påminner om träningsmaterialet, exempelvis Moby Dick. Genom att justera k-värdet kan man kontrollera hur mycket sammanhang eller slump programmet bevarar – små värden ger mer slumpmässig text, medan större värden ger mer sammanhängande meningar. 
Körningen sker med kommandot:
./slm <k> <filnamn> <textlängd>

Diskussion:
Arbetet visar hur språkmodellering på teckennivå kan implementeras på ett enkelt men effektivt sätt. Projektet illustrerar även sambandet mellan datastruktur, sannolikhet och programmering. En tydlig kodstruktur, Makefile, dokumentation och Git-historik har säkerställt god programdesign och spårbar utveckling.

Slutsats:
Laborationen uppfyller samtliga krav och visar på förståelse för grundläggande språkmodellering och programutveckling i C++.
